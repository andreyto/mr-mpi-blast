Tutorial - How to run mr-mpi-blast on XSEDE TACC Ranger


Updated: 12/27/2011
By Seung-Jin Sul (ssul@jcvi.org)


* Requirements

    - This tutorial is prepared and tested on XSEDE TACC Ranger cluster which 
      is one of high performance computing systems operated by XSEDE Texas 
      Advanced Computing Center (TACC). It should be easy to adapt for other 
      systems.
    - The following assumes that you are working in your own copy of the 
      tutorial directory.
      
      ex) $ mkdir $HOME/mr-mpi-blast-tutorial
          $ cp -R $MRMPIBLAST_PREFIX/tutorial/* $HOME/mr-mpi-blast-tutorial
          $ cd $HOME/mr-mpi-blast-tutorial
      
      
    - The "$MRMPIBLAST_PREFIX/bin" should be added to the executable search path
      for running "mrblast" and "makeblastdb" executables and other Python 
      scripts.
      
      ex) $ export PATH=$MRMPIBLAST_PREFIX/bin:$PATH
      
      
    - Utilities for preparing data and converting output need Python installed. 
      To use HD5 database format as output format, PyTables package should be 
      installed (http://www.pytables.org/moin).
      

1. Set XSEDE TACC Ranger module list

    $ bash ./ranger_setup_env.sh


2. Prepare test data and run mr-mpi-blast

    (1) Generate queries
   
       $ sh ./1.generate_query.sh
   
        - Download NCBI RefSeq viral FASTA sequence files and collect them in a 
          FASTA file (3,984 sequences, ~84Mbp)
        - Generate short queries by splitting each viral sequence in 1kbp 
          length with 100bp overlap. (96,752 sequences, ~97Mbp).
        - Generate an index file and a defline file from the input query file 
          using "seqindexer.py". The unique query ID is set with serial numbers.
        - The query file name and the index/defline file names are specified in 
          "mrblast.ini".
    

    (2) Make BLAST database
      
       $ sh ./2.make_blastdb.sh
   
        - Download NCBI RefSeq microbial FASTA sequence files and collect them 
          in a FASTA file (39,006 sequences, ~8Gbp).
        - Make BLAST formatted database partitions using "makeblastdb" utility 
          resulting in two BLAST formatted database partitions, 
          microbial_all.db.00" and "microbial_all.db.01".
        - The partition names are specified in "dblist.txt" and the database 
          name, "microbial_all.db" is also set in "DATABASENAME" in "mrblast.ini".
                    
        
    (3) Run mr-mpi-blast
       
       * NOTE
         Please set your SGE account code to $SGE_ACCOUNT 
              
       $ sh ./3.run_mr-mpi-blast.sh
       
        - Qsub mr-mpi-blast for BLAST search of the queries against the 
          generated BLAST database.
        - Run the mr-mpi-blast using ibrun with requesting 64 cores
          on the "development" queue. 
        - The query block size option, "BLOCKSIZE" in the "mrblast.ini" is set 
          as 1Mbp resulting in 96 query blocks and total 192 (96 query blocks x 
          2 database files) work items.
        - The "dblist.txt" has the name of formatted database, "microbial_all.db.00" 
          and "microbial_all.db.01".
        - The evalue is set as 1e-4.

        
    (4) Convert output hit files from mr-mpi-blast
   
       $ sh ./4.convert_hits.sh
        
         - Move "./blastdb/*.bin" to "./blastdb/hits". 
         - Convert *.bin files in "./blastdb/hits" into "./blastdb/hits.csv" 
           without the original deflines of the input queries and into
           "./blastdb/hits_w_defline.csv" with deflines from the input queries.
         
                   
                   
                   
                   
